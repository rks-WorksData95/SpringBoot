package com.jwt.authentication.demo.model;

import java.io.IOException;
import java.util.HashSet;
import java.util.Set;

import javax.mail.MessagingException;
import javax.mail.internet.MimeMessage;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.ClassPathResource;
import org.springframework.core.io.FileSystemResource;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class userController {

	@Autowired
	user userRepo;
	
	@Autowired
	roleReposetory roleRepo;
	
	@Autowired
	PasswordEncoder passwordEncoder;
	
	@Autowired
	JavaMailSender javaMailSender;
	
	
	@PostMapping(path = "/varifyUser/{token}")
	public ResponseEntity<Object> verifyUser(@PathVariable String token){
		System.out.println("Token : "+token);
		return new ResponseEntity<Object>("Verify User!", HttpStatus.OK);
	}
	
	@PostMapping(path = "/userInfo")
	public ResponseEntity<Object> userInfo(@RequestBody userInformation user) throws MessagingException, IOException{
		
		System.out.println("************ USERINFO ***************");
		
		if(userRepo.existsByUsername(user.getUsername())) {
			return new ResponseEntity<Object>("Username is already taken!", HttpStatus.OK);
		}
		
		if(userRepo.existsByEmailId(user.getEmailId())) {
			return new ResponseEntity<Object>("Email Address already in use!", HttpStatus.OK);
		}
		
		Set<Role> roles= new HashSet<Role>();
		roles.add(roleRepo.findByRoleName("USER"));
		
		user.setRoles(roles);
		user.setPassword(passwordEncoder.encode(user.getPassword()));
		userInformation userDB = userRepo.save(user);
		
		if(userDB==null) {
			
			return new ResponseEntity<Object>("Not Register Successfully!", HttpStatus.BAD_REQUEST);
			
		}else {
			
//			SimpleMailMessage msg=new SimpleMailMessage();
//			msg.setTo("ramsadhu777@gmail.com");
//			msg.setSubject("Mail Testing");
//			msg.setText("Hello World \n Spring Boot Email");
//			javaMailSender.send(msg);
			
			sendEmailWithAttachment();
			
			return new ResponseEntity<Object>("Register Successfully!", HttpStatus.OK);
			
		}
	}
	
	void sendEmailWithAttachment() throws MessagingException, IOException {

        MimeMessage msg = javaMailSender.createMimeMessage();

        // true = multipart message
        MimeMessageHelper helper = new MimeMessageHelper(msg, true);
        helper.setTo("ramsadhu777@gmail.com");

        helper.setSubject("Testing from Spring Boot");

        // default = text/plain
        //helper.setText("Check attachment for image!");

        // true = text/html
        helper.setText("<h1>Check attachment for image!</h1> <br> <a href=\"https://localhost:8080/userInfo\">Activate Token</a>", true);
        
        FileSystemResource file = new FileSystemResource("D:\\Ram-CD\\FullStack-Angualr With Spring Boot\\STS-Workspace\\JwtAuthenticationDemo\\Images\\Penguins.jpg");
        
        helper.addAttachment("Penguins.jpg", file);

        javaMailSender.send(msg);

    }
	
}
